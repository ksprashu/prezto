# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
export TERM=xterm-256color
DEFAULT_USER=ksprashanth

# Setting for the new UTF-8 terminal support in Lion
LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8


[[ -s "$HOME/.profile" ]] && source "$HOME/.profile" # Load the default .profile

if [[ "$OSTYPE" != darwin* ]] && [[ "$USER" == ksprashanth ]]; then
  source /etc/bash_completion.d/g4d
  source /etc/bash_completion.d/hgd
fi

alias devsite_codelabs='/google/bin/releases/devrel-codelabs/devsite_codelabs'
complete -W "create_cl flags help update_cl" devsite_codelabs
export TENANT="codelabs"

alias mkdir='mkdir -p -v'
# alias v="nvim"
# alias vi="vim"
alias vim="nvim"
alias py3="python3"
alias python="python3"
alias pip="python3 -m pip"
alias pip3="python3 -m pip"

export TERM="xterm-256color"
setopt RM_STAR_WAIT
setopt interactivecomments
setopt CORRECT

export NVIM_PYTHON_LOG_FILE=/tmp/log

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/anaconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
alias serve='python3 -m http.server 9000'
alias newnode='echo > package.json "{\"dependencies\": {},\"devDependencies\": {}}" && npm install request async bluebird lodash bunyan --save'
alias newmocha='echo > package.json "{\"dependencies\": {},\"devDependencies\": {}}" && npm install request lodash mocha chai --save-dev'


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Install Ruby Gems to ~/gems
export GEM_HOME="$HOME/gems"
export PATH="$HOME/gems/bin:$PATH"

# export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.secrets/next-eventapp-demo-localdev.json"

alias pastebin="/google/src/head/depot/eng/tools/pastebin"

gcertstatus --quiet || gcert
alias source-devsite='source /google/src/head/depot/google3/devsite/two/tools/aliases.sh'
if source-devsite ; then
  : # echo 'DevSite aliases are available.'
else
  echo 'Sourcing DevSite failed; run `gcert`, then run `source-devsite`.'
fi

alias vsc-restart='systemctl --user restart code-server'

work() { tmx2 new-session -A -s ${1:-work}; }

export PATH="$(yarn global bin):$HOME/.gem/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/ksprashanth/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/ksprashanth/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/ksprashanth/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/ksprashanth/google-cloud-sdk/completion.zsh.inc'; fi
